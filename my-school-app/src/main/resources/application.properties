#h2 configuration
#spring.datasource.url=jdbc:h2:mem:schooldb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true

#jpa
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql= true

#swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/school-api.html
springdoc.swagger-ui.operationsSorter=method



#Derby Configuration
spring.datasource.url=jdbc:derby://localhost:1527/schooldb;create=true
spring.datasource.driver-class-name=org.apache.derby.jdbc.ClientDriver
spring.datasource.username=admin
spring.datasource.password=123

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect
#Available values of spring.jpa.hibernate.ddl-auto:
#none:			No database Schema initialization
#create:		Drops and creates the schema at the application startup. With this option, all your data will be 
#				gone on each startup.
#create-drop:	Creates schema at the startup and destroys the schema on context closure. Useful for unit tests.
#validate:		Only checks if the Schema matches the Entities. If the schema does not match, 
#				then the application startup will fail. Makes no changes to the database.
#update:		Updates the schema only if necessary. For example, If a new field was added in an entity, 
#				then it will simply alter the table for a new column without destroying the data.

